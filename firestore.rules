/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a user-ownership model for user profiles and materials.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information.
 * - /materials/{materialId}: Stores material listings.
 * - /materials/{materialId}/requests/{requestId}: Stores requests for specific materials.
 *
 * Key Security Decisions:
 * - Users can only read and write their own profile data.
 * - Anyone can read material listings.
 * - Only the user who posted a material can modify or delete it.
 * - Anyone can create a request for a material.
 * - Only the material owner can read the requests for their materials.
 *
 * Denormalization for Authorization:
 * - The `Material` entity has a `postedBy` field that stores the UID of the user who posted it. This allows us to easily check ownership for updates and deletes.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) - Authenticated user can create their own profile.
     * @allow (get, update, delete) - Authenticated user can read/write their own profile.
     * @deny (create) - If the user ID in the document does not match the authenticated user ID.
     * @deny (get, update, delete) - If the authenticated user is not the owner of the profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && request.resource.data.id == request.auth.uid;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to material listings.
     * @path /materials/{materialId}
     * @allow (get, list) - Anyone can read material listings.
     * @allow (create) - Authenticated user can create a material listing. Must match postedBy to their auth UID.
     * @allow (update, delete) - Only the user who posted the material can modify or delete it.
     * @deny (update, delete) - If the authenticated user is not the owner of the material.
     * @principle Enforces ownership for material modification and deletion, allows public reads.
     */
    match /materials/{materialId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(postedBy) {
        return request.auth.uid == postedBy;
      }

      function isExistingOwner(postedBy) {
          return isOwner(postedBy) && resource != null;
      }

      allow get: if true;
      allow list: if true;

      allow create: if isSignedIn() && request.resource.data.postedBy == request.auth.uid;
      allow update: if isExistingOwner(resource.data.postedBy);
      allow delete: if isExistingOwner(resource.data.postedBy);

      /**
       * @description Controls access to requests for a specific material.
       * @path /materials/{materialId}/requests/{requestId}
       * @allow (create) - Anyone can create a request for a material.
       * @allow (get, list) - Only the owner of the material can read the requests.
       * @deny (get, list) - If the authenticated user is not the owner of the material.
       * @principle Restricts request reads to the material owner.
       */
      match /requests/{requestId} {
        function isSignedIn() {
          return request.auth != null;
        }

        function isMaterialOwner(materialId) {
          return get(/databases/$(database)/documents/materials/$(materialId)).data.postedBy == request.auth.uid;
        }

        allow get: if isSignedIn() && isMaterialOwner(materialId);
        allow list: if isSignedIn() && isMaterialOwner(materialId);

        allow create: if isSignedIn();
        allow update: if false;
        allow delete: if false;
      }
    }
  }
}